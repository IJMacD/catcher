openapi: 3.0.3
info:
  title: Catcher Leaderboard API 1.0
  description: |-
    This is the documentation for the API of the catcher webapp used for interacting with the leaderboard.

    Some useful links:
    - [The Catcher repository](https://github.com/IJMacD/catcher)
    - [A live demo of the game](https://catcher.ijmacd.com)
    - [A static version of the game](https://ijmacd.github.io/catcher) (No leaderboard)
  contact:
    email: IJMacD@gmail.com
  version: "1.0"
servers:
  - url: https://catcher.ijmacd.com/api
tags:
  - name: leaderboard
    description: Everything about the leaderboard
  - name: moderation
    description: Everything about moderation
paths:
  /leaderboard:
    post:
      tags:
        - leaderboard
      summary: Add a new entry to the leaderboard
      description: Add a new entry to the leaderboard
      operationId: addEntry
      requestBody:
        $ref: "#/components/requestBodies/Entry"
      responses:
        "201":
          description: Successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaderboardEntry"
        "400":
          description: Invalid input
    get:
      tags:
        - leaderboard
      summary: Get leaderboard
      description: Returns the top 100 entries on the leaderboard
      operationId: getEntries
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LeaderboardEntry"
  /leaderboard/{entryId}:
    get:
      tags:
        - leaderboard
      summary: Find leaderboard entry by ID
      description: Returns a single leaderboard entry
      operationId: getEntryById
      parameters:
        - name: entryId
          in: path
          description: ID of entry to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaderboardEntry"
        "404":
          description: Entry not found
    delete:
      tags:
        - leaderboard
      summary: Deletes an entry
      description: delete an entry
      operationId: deleteEntry
      parameters:
        - name: entryId
          in: path
          description: Entry id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
        "401":
          description: Unauthorized
        "403":
          description: Auth invalid
        "404":
          description: Invalid entry id
      security:
        - leaderboard_auth: []
  /moderation/verify:
    get:
      tags:
        - moderation
      summary: Verify auth is valid
      description: Endpoint to check if credentials are valid before attempting to take action on the leaderboard
      operationId: verifyModeration
      responses:
        "200":
          description: Auth is valid
        "401":
          description: Auth not provided
        "403":
          description: Auth invalid
components:
  schemas:
    LeaderboardEntry:
      required:
        - id
        - playerName
        - score
        - submittedAt
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1000000
        playerName:
          type: string
          example: Dougie
        score:
          type: integer
          format: int64
          example: 100
        submittedAt:
          type: string
          format: date-time
  requestBodies:
    Entry:
      description: Create a new pet in the store
      content:
        application/x-www-form-urlencoded:
          schema:
            required:
              - name
              - score
            type: object
            properties:
              name:
                type: string
                example: Dougie
              score:
                type: integer
                example: 100
      required: true
  securitySchemes:
    leaderboard_auth:
      type: http
      scheme: basic
